{
  "@id": "dtmi:com:syyclops:BuildingComponent;1",
  "@type": "Interface",
  "displayName": {
    "en": "Building Component"
  },
  "description": {
    "en": "A part that constitutes a piece of a building's structural or architectural makeup that is constructed onsite, e.g., Facade, Wall, Slab, RoofInner, etc."
  },
  "extends" : [
  ],
  "contents": [
    {
      "@type": "Relationship",
      "description": {
        "en": "Indicates a super-entity of the same base type (i.e., Spaces only have Spaces as parents, Organizations only have Organizations, etc). Inverse of: hasPart"
      },
      "displayName": {
        "en": "is part of"
      },
      "maxMultiplicity": 1,
      "name": "isPartOf",
      "target": "dtmi:com:syyclops:BuildingComponent;1"
    },
    {
      "@type": "Relationship",
      "description": {
        "en": "Indicates which Building a certain Building Component is part of. Inverse of: hasBuildingComponent"
      },
      "displayName": {
        "en": "component of building"
      },
      "maxMultiplicity": 1,
      "name": "componentOfBuilding",
      "target": "dtmi:com:syyclops:Building;1"
    },
    {
      "@type": "Relationship",
      "name": "hasDocument",
      "displayName": {
        "en": "has document"
      },
      "target": "dtmi:com:syyclops:Document;1"
    },
    {
      "@type": "Relationship",
      "name": "hasSettings",
      "displayName": {
        "en": "has settings"
      },
      "description": {
        "en": "Used to extend a twin's base properties with settings that can be used by applications or people to create functionality and experiences in the context of the twin."
      },
      "target": "dtmi:com:syyclops:Settings;1"
    },
    {
      "@type": "Relationship",
      "name": "includedIn",
      "displayName": {
        "en": "included in"
      },
      "target": "dtmi:com:syyclops:Collection;1"
    },
    {
      "@type": "Relationship",
      "displayName": {
        "en": "located in"
      },
      "name": "locatedIn",
      "target": "dtmi:com:syyclops:Space;1"
    },
    {
      "@type": "Relationship",
      "name": "isFedBy",
      "displayName": {
        "en": "is fed by"
      },
      "properties": [
        {
          "@type": "Property",
          "name": "substance",
          "displayName": {
            "en": "Substance"
          },
          "writable": true,
          "schema": "dtmi:com:syyclops:BuildingComponentIsFedBySubstances;1"
        }
      ]
    },
    {
      "@type": "Property",
      "displayName": {
        "en": "Custom Tags"
      },
      "name": "customTags",
      "schema": {
        "@type": "Map",
        "mapKey": {
          "name": "tagName",
          "schema": "string"
        },
        "mapValue": {
          "name": "tagValue",
          "schema": "boolean"
        }
      },
      "writable": true
    },
    {
      "@type": "Property",
      "displayName": {
        "en": "External IDs"
      },
      "name": "externalIds",
      "schema": {
        "@type": "Map",
        "mapKey": {
          "name": "externalIdName",
          "schema": "string"
        },
        "mapValue": {
          "name": "externalIdValue",
          "schema": "string"
        }
      },
      "writable": true
    },
    {
      "@type": "Property",
      "displayName": {
        "en": "Mapped IDs"
      },
      "name": "mappedIds",
      "writable": true,
      "schema": {
        "@type": "Array",
        "elementSchema": "dtmi:com:syyclops:BuildingComponentMappedIdObject;1"
      }
    },
    {
      "@type": "Property",
      "displayName": {
        "en": "name"
      },
      "name": "name",
      "schema": "string",
      "writable": true
    },
    {
      "@type": "Property",
      "name": "geometryViewerID",
      "displayName": {
        "en": "Geometry Viewer ID"
      },
      "writable": true,
      "schema": "string",
      "comment": "Reference for geometry rendering (i.e. ForgeViewerID)"
    },
    {
      "@type": "Property",
      "name": "geometrySpatialReference",
      "displayName": {
        "en": "Geometry Spatial Reference"
      },
      "writable": true,
      "schema": "string",
      "comment": "Reference for displaying in spatial context"
    },
    {
      "@type": "Property",
      "name": "geometryExternalID",
      "displayName": {
        "en": "Geometry External ID"
      },
      "writable": true,
      "schema": "string",
      "comment": "Reference to geometry source (i.e. Revit GUID)"
    },
    {
      "@type": "Property",
      "name": "uniqueID",
      "displayName": {
        "en": "Globally Unique ID"
      },
      "writable": true,
      "schema": "string"
    },
    {
      "@type": "Property",
      "name": "externalID",
      "displayName": {
        "en": "External ID"
      },
      "writable": true,
      "schema": "string"
    },
    {
      "@type": "Property",
      "name": "description",
      "displayName": {
        "en": "Description"
      },
      "writable": true,
      "schema": "string"
    },
    {
      "@type": "Property",
      "name": "siteID",
      "displayName": {
        "en": "Site ID"
      },
      "writable": true,
      "schema": "string"
    },
    {
      "@type": "Property",
      "name": "alternateClassification",
      "displayName": {
        "en": "Alternate Classification"
      },
      "writable": true,
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "masterFormat",
            "displayName": {
              "en": "MasterFormat"
            },
            "schema": "dtmi:com:syyclops:BuildingComponentAlternateClassificationObject;1"
          },
          {
            "name": "omniClass",
            "displayName": {
              "en": "OmniClass"
            },
            "schema": "dtmi:com:syyclops:BuildingComponentAlternateClassificationObject;1"
          },
          {
            "name": "uniFormat",
            "displayName": {
              "en": "UniFormat"
            },
            "schema": "dtmi:com:syyclops:BuildingComponentAlternateClassificationObject;1"
          },
          {
            "name": "uniclass",
            "displayName": {
              "en": "Uniclass"
            },
            "schema": "dtmi:com:syyclops:BuildingComponentAlternateClassificationObject;1"
          },
          {
            "name": "projectHaystack",
            "displayName": {
              "en": "Project Haystack"
            },
            "schema": "dtmi:com:syyclops:BuildingComponentAlternateClassificationObject;1"
          },
          {
            "name": "brickSchema",
            "displayName": {
              "en": "Brick Schema"
            },
            "schema": "dtmi:com:syyclops:BuildingComponentAlternateClassificationObject;1"
          }
        ]
      }
    },
    {
      "@type": "Property",
      "name": "customProperties",
      "displayName": {
        "en": "Custom Properties"
      },
      "schema": {
        "@type": "Map",
        "mapKey": {
          "name": "sourceName",
          "schema": "string"
        },
        "mapValue": {
          "name": "sourceProperties",
          "schema": {
            "@type": "Map",
            "mapKey": {
              "name": "propertyName",
              "schema": "string"
            },
            "mapValue": {
              "name": "propertyValue",
              "schema": "string"
            }
          }
        }
      }
    }
  ],
  "schemas": [
    {
      "@id": "dtmi:com:syyclops:BuildingComponentIsFedBySubstances;1",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "enumValue": "MakeupWater",
          "name": "MakeupWater"
        },
        {
          "enumValue": "Light",
          "name": "Light"
        },
        {
          "enumValue": "IrrigationWater",
          "name": "IrrigationWater"
        },
        {
          "enumValue": "HotWater",
          "name": "HotWater"
        },
        {
          "enumValue": "HotDomesticWater",
          "name": "HotDomesticWater"
        },
        {
          "enumValue": "GreaseExhaustAir",
          "name": "GreaseExhaustAir"
        },
        {
          "enumValue": "Gasoline",
          "name": "Gasoline"
        },
        {
          "enumValue": "FuelOil",
          "name": "FuelOil"
        },
        {
          "enumValue": "Freight",
          "name": "Freight"
        },
        {
          "enumValue": "ExhaustAir",
          "name": "ExhaustAir"
        },
        {
          "enumValue": "Ethernet",
          "name": "Ethernet"
        },
        {
          "enumValue": "DriveElec",
          "name": "DriveElec"
        },
        {
          "enumValue": "Diesel",
          "name": "Diesel"
        },
        {
          "enumValue": "DCElec",
          "name": "DCElec"
        },
        {
          "enumValue": "CondenserWater",
          "name": "CondenserWater"
        },
        {
          "enumValue": "Condensate",
          "name": "Condensate"
        },
        {
          "enumValue": "ColdDomesticWater",
          "name": "ColdDomesticWater"
        },
        {
          "enumValue": "ChilledWater",
          "name": "ChilledWater"
        },
        {
          "enumValue": "BlowdownWater",
          "name": "BlowdownWater"
        },
        {
          "enumValue": "Air",
          "name": "Air"
        },
        {
          "enumValue": "ACElec",
          "name": "ACElec"
        },
        {
          "enumValue": "NaturalGas",
          "name": "NaturalGas"
        },
        {
          "enumValue": "NonPotableDomesticWater",
          "name": "NonPotableDomesticWater"
        },
        {
          "enumValue": "OutsideAir",
          "name": "OutsideAir"
        },
        {
          "enumValue": "Propane",
          "name": "Propane"
        },
        {
          "enumValue": "RecircHotDomesticWater",
          "name": "RecircHotDomesticWater"
        },
        {
          "enumValue": "Refrig",
          "name": "Refrig"
        },
        {
          "enumValue": "ReturnAir",
          "name": "ReturnAir"
        },
        {
          "enumValue": "SprinklerWater",
          "name": "SprinklerWater"
        },
        {
          "enumValue": "Steam",
          "name": "Steam"
        },
        {
          "enumValue": "StormDrainage",
          "name": "StormDrainage"
        },
        {
          "enumValue": "SupplyAir",
          "name": "SupplyAir"
        },
        {
          "enumValue": "TransferAir",
          "name": "TransferAir"
        },
        {
          "enumValue": "WasteVentDrainage",
          "name": "WasteVentDrainage"
        },
        {
          "enumValue": "Water",
          "name": "Water"
        }
      ]
    },
    {
      "@id": "dtmi:com:syyclops:BuildingComponentAlternateClassificationObject;1",
      "@type": "Object",
      "fields": [
        {
          "name": "version",
          "displayName": {
            "en": "Version"
          },
          "schema": "string"
        },
        {
          "name": "code",
          "displayName": {
            "en": "Code"
          },
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:com:syyclops:BuildingComponentMappedIdObject;1",
      "@type": "Object",
      "description": {
        "en": "An object which represents an identity in Mapped, typically sourced from a connector. The composite of all fields is unique for a given twin."
      },
      "fields": [
        {
          "name": "exactType",
          "displayName": {
            "en": "Exact Type"
          },
          "description": {
            "en": "The type of Mapped identity such as ExternalIdentity, SpaceCode, or NameIdentity"
          },
          "schema": "string"
        },
        {
          "name": "scope",
          "displayName": {
            "en": "Scope"
          },
          "description": {
            "en": "The scope of a Mapped identity such as BUILDING, CONNECTOR, or ORG."
          },
          "schema": "string"
        },
        {
          "name": "scopeId",
          "displayName": {
            "en": "Scope ID"
          },
          "description": {
            "en": "The ID of the scope in Mapped. For a CONNECTOR, this is the ID of the source or destination connector."
          },
          "schema": "string"
        },
        {
          "name": "value",
          "displayName": {
            "en": "Value"
          },
          "description": {
            "en": "The value of the identity as defined in the scope (i.e. Connector) and stored in Mapped."
          },
          "schema": "string"
        },
        {
          "name": "dateCreated",
          "displayName": {
            "en": "Date Created"
          },
          "description": {
            "en": "The date the identity was created in Mapped."
          },
          "schema": "dateTime"
        }
      ]
    }
  ],
  "@context": [
    "dtmi:dtdl:context;3"
  ]
}
