{
  "@id": "dtmi:com:syyclops:Capability;1",
  "@type": "Interface",
  "displayName": {
    "en": "Capability"
  },
  "description": {
    "en": "A Capability indicates the capacity of an entity, be it a Space, an Asset, or a Device, to produce or ingest data which can be trended as a time series. This is roughly equivalent to the established Brick Schema and generic BMS term \"point\". Specific subclasses specialize this behaviour: Sensor entities harvest data from the real world, Actuator entities accept commands from a digital twin platform, and Parameter entities configure some capability or system."
  },
  "extends": [
  ],
  "contents": [
    {
      "@type": "Relationship",
      "description": {
        "en": "The entity (Asset, Space, LogicalDevice, etc.) that has this Capability. Inverse of: hasCapability"
      },
      "displayName": {
        "en": "is capabilty of"
      },
      "name": "isCapabilityOf"
    },
    {
      "@type": "Relationship",
      "name": "hasSettings",
      "displayName": {
        "en": "has settings"
      },
      "description": {
        "en": "Used to extend a twin's base properties with settings that can be used by applications or people to create functionality and experiences in the context of the twin."
      },
      "target": "dtmi:com:syyclops:Settings;1"
    },
    {
      "@type": "Relationship",
      "name": "hostedBy",
      "displayName": {
        "en": "hosted by"
      },
      "comment": "Controller (i.e. BACnet Device)"
    },
    {
      "@type": "Relationship",
      "name": "isControlledBy",
      "displayName": {
        "en": "is controlled by"
      }
    },
    {
      "@type": "Property",
      "displayName": {
        "en": "Custom Tags"
      },
      "name": "customTags",
      "schema": {
        "@type": "Map",
        "mapKey": {
          "name": "tagName",
          "schema": "string"
        },
        "mapValue": {
          "name": "tagValue",
          "schema": "boolean"
        }
      },
      "writable": true
    },
    {
      "@type": "Property",
      "displayName": {
        "en": "External IDs"
      },
      "name": "externalIds",
      "schema": {
        "@type": "Map",
        "mapKey": {
          "name": "externalIdName",
          "schema": "string"
        },
        "mapValue": {
          "name": "externalIdValue",
          "schema": "string"
        }
      },
      "writable": true
    },
    {
      "@type": "Property",
      "displayName": {
        "en": "Mapped IDs"
      },
      "name": "mappedIds",
      "writable": true,
      "schema": {
        "@type": "Array",
        "elementSchema": "dtmi:com:syyclops:CapabilityMappedIdObject;1"
      }
    },
    {
      "@type": "Property",
      "name": "mappedConnectorId",
      "displayName": {
        "en": "Mapped Connector ID"
      },
      "description": {
        "en": "The connector ID as created by Mapped and stored as the $dtid of a Connector Application twin for the connector which has defined and trends this Capability."
      },
      "writable": true,
      "schema": "string"
    },
    {
      "@type": "Property",
      "displayName": {
        "en": "name"
      },
      "name": "name",
      "schema": "string",
      "writable": true
    },
    {
      "@type": "Property",
      "name": "uniqueID",
      "displayName": {
        "en": "Globally Unique ID"
      },
      "writable": true,
      "schema": "string"
    },
    {
      "@type": "Property",
      "name": "externalID",
      "displayName": {
        "en": "External ID"
      },
      "writable": true,
      "schema": "string"
    },
    {
      "@type": "Property",
      "name": "trendID",
      "displayName": {
        "en": "Trend ID"
      },
      "writable": true,
      "schema": "string",
      "comment": "Time Series DB"
    },
    {
      "@type": "Property",
      "name": "siteID",
      "displayName": {
        "en": "Site ID"
      },
      "writable": true,
      "schema": "string"
    },
    {
      "@type": "Property",
      "name": "connectorID",
      "displayName": {
        "en": "Connector ID"
      },
      "writable": true,
      "schema": "string",
      "comment": "Willow Connector identifier which manages the Capabiltiy"
    },
    {
      "@type": "Component",
      "name": "communication",
      "displayName": {
        "en": "Communication"
      },
      "schema": "dtmi:com:syyclops:CapabilityCommunication;1"
    },
    {
      "@type": "Property",
      "name": "description",
      "displayName": {
        "en": "Description"
      },
      "writable": true,
      "schema": "string"
    },
    {
      "@type": "Property",
      "name": "alternateClassification",
      "displayName": {
        "en": "Alternate Classification"
      },
      "writable": true,
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "projectHaystack",
            "displayName": {
              "en": "Project Haystack"
            },
            "schema": "dtmi:com:syyclops:CapabilityAlternateClassificationObject;1"
          },
          {
            "name": "brickSchema",
            "displayName": {
              "en": "Brick Schema"
            },
            "schema": "dtmi:com:syyclops:CapabilityAlternateClassificationObject;1"
          }
        ]
      }
    },
    {
      "@type": "Property",
      "name": "customProperties",
      "displayName": {
        "en": "Custom Properties"
      },
      "schema": {
        "@type": "Map",
        "mapKey": {
          "name": "sourceName",
          "schema": "string"
        },
        "mapValue": {
          "name": "sourceProperties",
          "schema": {
            "@type": "Map",
            "mapKey": {
              "name": "propertyName",
              "schema": "string"
            },
            "mapValue": {
              "name": "propertyValue",
              "schema": "string"
            }
          }
        }
      }
    },
    {
      "@type": "Property",
      "description": {
        "en": "Time when a core:Capability's value was last updated (see core:lastValue)."
      },
      "displayName": {
        "en": "last value time"
      },
      "name": "lastValueTime",
      "schema": "dateTime",
      "writable": true
    },
    {
      "@type": "Property",
      "name": "unit",
      "displayName": {
        "en": "Unit"
      },
      "writable": true,
      "schema": "string"
    },
    {
      "@type": "Property",
      "displayName": {
        "en": "Value Map"
      },
      "name": "valueMap",
      "schema": {
        "@type": "Map",
        "mapKey": {
          "name": "valueMapKey",
          "schema": "string"
        },
        "mapValue": {
          "name": "valueMapValue",
          "schema": "string"
        }
      },
      "writable": true
    },
    {
      "@type": "Property",
      "name": "validValues",
      "displayName": {
        "en": "Valid Values"
      },
      "writable": true,
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "minimum",
            "displayName": {
              "en": "Minimum"
            },
            "schema": "double"
          },
          {
            "name": "maximum",
            "displayName": {
              "en": "Maximum"
            },
            "schema": "double"
          }
        ]
      }
    },
    {
      "@type": "Property",
      "name": "interpolation",
      "displayName": {
        "en": "Interpolation"
      },
      "writable": true,
      "schema": {
        "@id": "dtmi:com:syyclops:CapabilityInterpolation;1",
        "@type": "Enum",
        "valueSchema": "string",
        "enumValues": [
          {
            "name": "linear",
            "displayName": {
              "en": "linear"
            },
            "enumValue": "linear"
          },
          {
            "name": "stepForward",
            "displayName": {
              "en": "Step Forward"
            },
            "enumValue": "stepForward"
          },
          {
            "name": "stepBackward",
            "displayName": {
              "en": "Step Backward"
            },
            "enumValue": "stepBackward"
          }
        ]
      }
    },
    {
      "@type": "Property",
      "name": "totalized",
      "displayName": {
        "en": "Totalized"
      },
      "writable": true,
      "schema": "boolean"
    },
    {
      "@type": "Property",
      "name": "valueExpression",
      "displayName": {
        "en": "Value Expression"
      },
      "writable": true,
      "schema": "string",
      "comment": "The trended values are derived by evaluating this expression"
    },
    {
      "@type": "Property",
      "name": "scaleFactor",
      "displayName": {
        "en": "Scale Factor"
      },
      "writable": true,
      "schema": "double",
      "comment": "Raw values from the connected system are multiplied by this scale factor when being stored in the twin"
    },
    {
      "@type": "Property",
      "name": "offsetValue",
      "displayName": {
        "en": "Offset Value"
      },
      "writable": true,
      "schema": "double",
      "comment": "This value is added to the raw values from the connected system, after scaling, when being stored in the twin"
    },
    {
      "@type": "Property",
      "name": "type",
      "displayName": {
        "en": "Type"
      },
      "writable": true,
      "schema": {
        "@id": "dtmi:com:syyclops:CapabilityType;1",
        "@type": "Enum",
        "valueSchema": "string",
        "enumValues": [
          {
            "name": "undefined",
            "displayName": {
              "en": "undefined"
            },
            "enumValue": "undefined"
          },
          {
            "name": "analog",
            "displayName": {
              "en": "analog"
            },
            "enumValue": "analog"
          },
          {
            "name": "binary",
            "displayName": {
              "en": "binary"
            },
            "enumValue": "binary"
          },
          {
            "name": "multiState",
            "displayName": {
              "en": "multiState"
            },
            "enumValue": "multiState"
          },
          {
            "name": "sum",
            "displayName": {
              "en": "sum"
            },
            "enumValue": "sum"
          }
        ]
      }
    },
    {
      "@type": "Component",
      "displayName": {
        "en": "categorization properties"
      },
      "name": "categorizationProperties",
      "schema": "dtmi:com:syyclops:CapabilityPropertySet;1"
    },
    {
      "@type": "Property",
      "name": "tags",
      "displayName": {
        "en": "Tags"
      },
      "schema": {
        "@type": "Map",
        "mapKey": {
          "name": "tagName",
          "schema": "string"
        },
        "mapValue": {
          "name": "tagValue",
          "schema": "boolean"
        }
      }
    },
    {
      "@type": ["Property", "TimeSpan"],
      "name": "trendInterval",
      "displayName": {
        "en": "Trend Interval"
      },
      "writable": true,
      "schema": "integer",
      "unit": "second",
      "comment": "how often the capability value is read from the controller"
    },
    {
      "@type": "Property",
      "name": "displayPriority",
      "displayName": {
        "en": "Display Priority"
      },
      "writable": true,
      "schema": "double",
      "comment": "sort and filter priority to be leveraged by UI"
    },
    {
      "@type": "Property",
      "name": "enabled",
      "displayName": {
        "en": "Is Enabled"
      },
      "writable": true,
      "schema": "boolean"
    },
    {
      "@type": "Property",
      "name": "detected",
      "displayName": {
        "en": "Is Detected"
      },
      "writable": true,
      "schema": "boolean"
    },
    {
      "@type": "Property",
      "name": "analyticsEnabled",
      "displayName": {
        "en": "Is Enabled for Analytics"
      },
      "writable": true,
      "schema": "boolean"
    }
  ],
  "schemas": [
    {
      "@id": "dtmi:com:syyclops:CapabilityAlternateClassificationObject;1",
      "@type": "Object",
      "fields": [
        {
          "name": "version",
          "displayName": {
            "en": "Version"
          },
          "schema": "string"
        },
        {
          "name": "code",
          "displayName": {
            "en": "Code"
          },
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:com:syyclops:CapabilityMappedIdObject;1",
      "@type": "Object",
      "description": {
        "en": "An object which represents an identity in Mapped, typically sourced from a connector. The composite of all fields is unique for a given twin."
      },
      "fields": [
        {
          "name": "exactType",
          "displayName": {
            "en": "Exact Type"
          },
          "description": {
            "en": "The type of Mapped identity such as ExternalIdentity, SpaceCode, or NameIdentity"
          },
          "schema": "string"
        },
        {
          "name": "scope",
          "displayName": {
            "en": "Scope"
          },
          "description": {
            "en": "The scope of a Mapped identity such as BUILDING, CONNECTOR, or ORG."
          },
          "schema": "string"
        },
        {
          "name": "scopeId",
          "displayName": {
            "en": "Scope ID"
          },
          "description": {
            "en": "The ID of the scope in Mapped. For a CONNECTOR, this is the ID of the source or destination connector."
          },
          "schema": "string"
        },
        {
          "name": "value",
          "displayName": {
            "en": "Value"
          },
          "description": {
            "en": "The value of the identity as defined in the scope (i.e. Connector) and stored in Mapped."
          },
          "schema": "string"
        },
        {
          "name": "dateCreated",
          "displayName": {
            "en": "Date Created"
          },
          "description": {
            "en": "The date the identity was created in Mapped."
          },
          "schema": "dateTime"
        }
      ]
    }
  ],
  "@context": [
    "dtmi:dtdl:context;3",
    "dtmi:dtdl:extension:quantitativeTypes;1"
  ]
}