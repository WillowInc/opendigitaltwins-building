{
  "@id": "dtmi:com:syyclops:Space;1",
  "@type": "Interface",
  "displayName": {
    "en": "Space"
  },
  "description": {
    "en": "A contiguous part of the physical world that has a 3D spatial extent and that contains or can contain sub-spaces. E.g., a Region can contain many pieces of Land, which in turn can contain many Buildings."
  },
  "extends" : [
  ],
  "contents": [
    {
      "@type": "Relationship",
      "description": {
        "en": "Indicates that a Space or Asset is served by some Sensor/Actuator or other Asset. For example: an entrance room might be served by (e.g., covered by) some camera equipment, or a conference room served by a CO2 sensor. Note that Assets can also service one another, e.g., an air-treatment Asset might serve an air diffuser Asset. Inverse of: serves"
      },
      "displayName": {
        "en": "served by"
      },
      "name": "servedBy",
      "properties": [
        {
          "@type": "Property",
          "name": "connectorOnboardingStatus",
          "displayName": {
            "en": "Connector Onboarding Status"
          },
          "description": {
            "en": "The status of onboarding the twins and relationships for a connector that has been installed. Used to filter out data quality alerts for connectors that are not Complete."
          },
          "writable": true,
          "schema": "dtmi:com:syyclops:SpaceServedByConnectorOnboardingStatus;1"
        }
      ]
    },
    {
      "@type": "Relationship",
      "description": {
        "en": "The coverage or impact area of a given Asset or Sensor/Actuator. For example: an air-treatment unit might serve several Rooms or a full Building. Note that Assets can also service one another, e.g., an air-treatment Asset might serve an air diffuser Asset. Inverse of: servedBy"
      },
      "displayName": {
        "en": "serves"
      },
      "name": "serves"
    },
    {
      "@type": "Relationship",
      "description": {
        "en": "Indicates that two spaces are adjacent to each other."
      },
      "displayName": {
        "en": "is adjacent to"
      },
      "name": "isAdjacentTo",
      "target": "dtmi:com:syyclops:Space;1"
    },
    {
      "@type": "Relationship",
      "description": {
        "en": "Property that defines the legal owner(s) of a given entity. Inverse of: owns"
      },
      "displayName": {
        "en": "owned by"
      },
      "name": "ownedBy",
      "target": "dtmi:com:syyclops:Agent;1"
    },
    {
      "@type": "Relationship",
      "displayName": {
        "en": "operated by"
      },
      "name": "operatedBy",
      "target": "dtmi:com:syyclops:Agent;1"
    },
    {
      "@type": "Relationship",
      "description": {
        "en": "Indicates a super-entity of the same base type (i.e., Spaces only have Spaces as parents, Organizations only have Organizations, etc). Inverse of: hasPart"
      },
      "displayName": {
        "en": "is part of"
      },
      "name": "isPartOf",
      "target": "dtmi:com:syyclops:Space;1"
    },
    {
      "@type": "Relationship",
      "displayName": {
        "en": "located in grid region"
      },
      "name": "locatedInGridRegion",
      "target": "dtmi:com:syyclops:Space;1"
    },
    {
      "@type": "Relationship",
      "description": {
        "en": "Indicates that an entity is included in some Collection, e.g., a Building is included in a RealEstate, or a Room is included in an Apartment. Inverse of: includes"
      },
      "displayName": {
        "en": "included in"
      },
      "name": "includedIn",
      "target": "dtmi:com:syyclops:Collection;1"
    },
    {
      "@type": "Relationship",
      "displayName": {
        "en": "constructed by"
      },
      "name": "constructedBy",
      "target": "dtmi:com:syyclops:Agent;1"
    },
    {
      "@type": "Relationship",
      "displayName": {
        "en": "architected by"
      },
      "name": "architectedBy",
      "target": "dtmi:com:syyclops:Agent;1"
    },
    {
      "@type": "Relationship",
      "name": "hasSettings",
      "displayName": {
        "en": "has settings"
      },
      "description": {
        "en": "Used to extend a twin's base properties with settings that can be used by applications or people to create functionality and experiences in the context of the twin."
      },
      "target": "dtmi:com:syyclops:Settings;1"
    },
    {
      "@type": "Relationship",
      "name": "hasDocument",
      "displayName": {
        "en": "has document"
      },
      "target": "dtmi:com:syyclops:Document;1"
    },
    {
      "@type": "Property",
      "displayName": {
        "en": "Custom Tags"
      },
      "name": "customTags",
      "schema": {
        "@type": "Map",
        "mapKey": {
          "name": "tagName",
          "schema": "string"
        },
        "mapValue": {
          "name": "tagValue",
          "schema": "boolean"
        }
      },
      "writable": true
    },
    {
      "@type": "Property",
      "displayName": {
        "en": "External IDs"
      },
      "name": "externalIds",
      "schema": {
        "@type": "Map",
        "mapKey": {
          "name": "externalIdName",
          "schema": "string"
        },
        "mapValue": {
          "name": "externalIdValue",
          "schema": "string"
        }
      },
      "writable": true
    },
    {
      "@type": "Property",
      "displayName": {
        "en": "Mapped IDs"
      },
      "name": "mappedIds",
      "writable": true,
      "schema": {
        "@type": "Array",
        "elementSchema": "dtmi:com:syyclops:SpaceMappedIdObject;1"
      }
    },
    {
      "@type": "Property",
      "displayName": {
        "en": "name"
      },
      "name": "name",
      "schema": "string",
      "writable": true
    },
    {
      "@type": "Property",
      "displayName": {
        "en": "occupiable"
      },
      "name": "occupiable",
      "description": {
        "en": "A space designed for human occupancy in which individuals may remain for a period of time for rest, amusement, education, dining, shopping, employment, or other similar purposes."
      },
      "schema": "boolean",
      "writable": true
    },
    {
      "@type": "Component",
      "name": "area",
      "displayName": {
        "en": "Area"
      },
      "schema": "dtmi:com:syyclops:SpaceArea;1"
    },
    {
      "@type": "Component",
      "name": "capacity",
      "displayName": {
        "en": "Capacity"
      },
      "schema": "dtmi:com:syyclops:SpaceCapacity;1"
    },
    {
      "@type": "Component",
      "name": "occupancy",
      "displayName": {
        "en": "Occupancy"
      },
      "schema": "dtmi:com:syyclops:SpaceOccupancy;1"
    },
    {
      "@type": "Component",
      "name": "temperature",
      "displayName": {
        "en": "Temperature"
      },
      "schema": "dtmi:com:syyclops:SpaceTemperature;1"
    },
    {
      "@type": "Component",
      "name": "humidity",
      "displayName": {
        "en": "Humidity"
      },
      "schema": "dtmi:com:syyclops:SpaceHumidity;1"
    },
    {
      "@type": "Component",
      "name": "CO2",
      "displayName": {
        "en": "CO2"
      },
      "schema": "dtmi:com:syyclops:SpaceCO2;1"
    },
    {
      "@type": "Property",
      "name": "geometryViewerID",
      "displayName": {
        "en": "Geometry Viewer ID"
      },
      "writable": true,
      "schema": "string",
      "comment": "Reference for geometry rendering (i.e. ForgeViewerID)"
    },
    {
      "@type": "Property",
      "name": "geometrySpatialReference",
      "displayName": {
        "en": "Geometry Spatial Reference"
      },
      "writable": true,
      "schema": "string",
      "comment": "Reference for displaying in spatial context"
    },
    {
      "@type": "Property",
      "name": "geometryExternalID",
      "displayName": {
        "en": "Geometry External ID"
      },
      "writable": true,
      "schema": "string",
      "comment": "Reference to geometry source (i.e. Revit GUID)"
    },
    {
      "@type": "Property",
      "name": "uniqueID",
      "displayName": {
        "en": "Globally Unique ID"
      },
      "writable": true,
      "schema": "string"
    },
    {
      "@type": "Property",
      "name": "externalID",
      "displayName": {
        "en": "External ID"
      },
      "writable": true,
      "schema": "string"
    },
    {
      "@type": "Property",
      "name": "code",
      "displayName": {
        "en": "Code"
      },
      "writable": true,
      "schema": "string"
    },
    {
      "@type": "Property",
      "name": "description",
      "displayName": {
        "en": "Description"
      },
      "writable": true,
      "schema": "string"
    },
    {
      "@type": "Property",
      "name": "siteID",
      "displayName": {
        "en": "Site ID"
      },
      "writable": true,
      "schema": "string"
    },
    {
      "@type": "Property",
      "name": "landId",
      "displayName": {
        "en": "Land ID"
      },
      "writable": true,
      "schema": "string",
      "comment": "Reference of the land (i.e. campus, site, airport) to which the asset belongs. A Customer has one or many Lands. Land is considered the top-level entity for binding airport twins."
    },
    {
      "@type": "Property",
      "name": "alternateClassification",
      "displayName": {
        "en": "Alternate Classification"
      },
      "writable": true,
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "masterFormat",
            "displayName": {
              "en": "MasterFormat"
            },
            "schema": "dtmi:com:syyclops:SpaceAlternateClassificationObject;1"
          },
          {
            "name": "omniClass",
            "displayName": {
              "en": "OmniClass"
            },
            "schema": "dtmi:com:syyclops:SpaceAlternateClassificationObject;1"
          },
          {
            "name": "uniFormat",
            "displayName": {
              "en": "UniFormat"
            },
            "schema": "dtmi:com:syyclops:SpaceAlternateClassificationObject;1"
          },
          {
            "name": "uniclass",
            "displayName": {
              "en": "Uniclass"
            },
            "schema": "dtmi:com:syyclops:SpaceAlternateClassificationObject;1"
          },
          {
            "name": "projectHaystack",
            "displayName": {
              "en": "Project Haystack"
            },
            "schema": "dtmi:com:syyclops:SpaceAlternateClassificationObject;1"
          },
          {
            "name": "brickSchema",
            "displayName": {
              "en": "Brick Schema"
            },
            "schema": "dtmi:com:syyclops:SpaceAlternateClassificationObject;1"
          }
        ]
      }
    },
    {
      "@type": "Property",
      "name": "customProperties",
      "displayName": {
        "en": "Custom Properties"
      },
      "schema": {
        "@type": "Map",
        "mapKey": {
          "name": "sourceName",
          "schema": "string"
        },
        "mapValue": {
          "name": "sourceProperties",
          "schema": {
            "@type": "Map",
            "mapKey": {
              "name": "propertyName",
              "schema": "string"
            },
            "mapValue": {
              "name": "propertyValue",
              "schema": "string"
            }
          }
        }
      }
    }
  ],
  "schemas": [
    {
      "@id": "dtmi:com:syyclops:SpaceAlternateClassificationObject;1",
      "@type": "Object",
      "fields": [
        {
          "name": "version",
          "displayName": {
            "en": "Version"
          },
          "schema": "string"
        },
        {
          "name": "code",
          "displayName": {
            "en": "Code"
          },
          "schema": "string"
        }
      ]
    },
    {
      "@id": "dtmi:com:syyclops:SpaceMappedIdObject;1",
      "@type": "Object",
      "description": {
        "en": "An object which represents an identity in Mapped, typically sourced from a connector. The composite of all fields is unique for a given twin."
      },
      "fields": [
        {
          "name": "exactType",
          "displayName": {
            "en": "Exact Type"
          },
          "description": {
            "en": "The type of Mapped identity such as ExternalIdentity, SpaceCode, or NameIdentity"
          },
          "schema": "string"
        },
        {
          "name": "scope",
          "displayName": {
            "en": "Scope"
          },
          "description": {
            "en": "The scope of a Mapped identity such as BUILDING, CONNECTOR, or ORG."
          },
          "schema": "string"
        },
        {
          "name": "scopeId",
          "displayName": {
            "en": "Scope ID"
          },
          "description": {
            "en": "The ID of the scope in Mapped. For a CONNECTOR, this is the ID of the source or destination connector."
          },
          "schema": "string"
        },
        {
          "name": "value",
          "displayName": {
            "en": "Value"
          },
          "description": {
            "en": "The value of the identity as defined in the scope (i.e. Connector) and stored in Mapped."
          },
          "schema": "string"
        },
        {
          "name": "dateCreated",
          "displayName": {
            "en": "Date Created"
          },
          "description": {
            "en": "The date the identity was created in Mapped."
          },
          "schema": "dateTime"
        }
      ]
    },
    {
      "@id": "dtmi:com:syyclops:SpaceServedByConnectorOnboardingStatus;1",
      "@type": "Enum",
      "valueSchema": "string",
      "enumValues": [
        {
          "enumValue": "InProgress",
          "name": "InProgress",
          "displayName": {
            "en": "In Progress"
          }
        },
        {
          "enumValue": "Complete",
          "name": "Complete",
          "displayName": {
            "en": "Complete"
          }
        },
        {
          "enumValue": "Retired",
          "name": "Retired",
          "displayName": {
            "en": "Retired"
          }
        }
      ]
    }
  ],
  "@context": [
    "dtmi:dtdl:context;3"
  ]
}
