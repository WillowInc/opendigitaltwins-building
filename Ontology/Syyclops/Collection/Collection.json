{
  "@id": "dtmi:com:syyclops:Collection;1",
  "@type": "Interface",
  "displayName": {
    "en": "Collection"
  },
  "description": {
    "en": "An administrative grouping of entities that are adressed and treated as a unit for some purpose. These entities may have some spatial arrangement (e.g., an apartment is typically contiguous) but that is not a requirement (see, e.g., a distributed campus consisting of spatially disjoint plots or buildings)."
  },
  "extends": [],
  "contents": [
    {
      "@type": "Relationship",
      "name": "hasDocument",
      "displayName": {
        "en": "has document"
      },
      "target": "dtmi:com:syyclops:Document;1",
      "@id": "dtmi:com:syyclops:Collection:hasDocument;1"
    },
    {
      "@type": "Relationship",
      "name": "hasSettings",
      "displayName": {
        "en": "has settings"
      },
      "description": {
        "en": "Used to extend a twin's base properties with settings that can be used by applications or people to create functionality and experiences in the context of the twin."
      },
      "target": "dtmi:com:syyclops:Settings;1",
      "@id": "dtmi:com:syyclops:Collection:hasSettings;1"
    },
    {
      "@type": "Relationship",
      "name": "includedIn",
      "displayName": {
        "en": "included in"
      },
      "target": "dtmi:com:syyclops:Collection;1",
      "@id": "dtmi:com:syyclops:Collection:includedIn;1"
    },
    {
      "@type": "Relationship",
      "displayName": {
        "en": "located in"
      },
      "name": "locatedIn",
      "target": "dtmi:com:syyclops:Space;1",
      "@id": "dtmi:com:syyclops:Collection:locatedIn;1"
    },
    {
      "@type": "Relationship",
      "description": {
        "en": "Indicates that a Space or Asset is served by some Sensor/Actuator or other Asset. For example: an entrance room might be served by (e.g., covered by) some camera equipment, or a conference room served by a CO2 sensor. Note that Assets can also service one another, e.g., an air-treatment Asset might serve an air diffuser Asset. Inverse of: serves"
      },
      "displayName": {
        "en": "served by"
      },
      "name": "servedBy",
      "@id": "dtmi:com:syyclops:Collection:servedBy;1"
    },
    {
      "@type": "Relationship",
      "description": {
        "en": "The coverage or impact area of a given Asset or Sensor/Actuator. For example: an air-treatment unit might serve several Rooms or a full Building. Note that Assets can also service one another, e.g., an air-treatment Asset might serve an air diffuser Asset. Inverse of: servedBy"
      },
      "displayName": {
        "en": "serves"
      },
      "name": "serves",
      "@id": "dtmi:com:syyclops:Collection:serves;1"
    },
    {
      "@type": "Property",
      "displayName": {
        "en": "Custom Tags"
      },
      "name": "customTags",
      "schema": {
        "@type": "Map",
        "mapKey": {
          "name": "tagName",
          "schema": "string",
          "@id": "dtmi:com:syyclops:Collection:tagName;1"
        },
        "mapValue": {
          "name": "tagValue",
          "schema": "boolean",
          "@id": "dtmi:com:syyclops:Collection:tagValue;1"
        },
        "@id": "dtmi:com:syyclops:Collection:MS1;1"
      },
      "writable": true,
      "@id": "dtmi:com:syyclops:Collection:customTags;1"
    },
    {
      "@type": "Property",
      "displayName": {
        "en": "External IDs"
      },
      "name": "externalIds",
      "schema": {
        "@type": "Map",
        "mapKey": {
          "name": "externalIdName",
          "schema": "string",
          "@id": "dtmi:com:syyclops:Collection:externalIdName;1"
        },
        "mapValue": {
          "name": "externalIdValue",
          "schema": "string",
          "@id": "dtmi:com:syyclops:Collection:externalIdValue;1"
        },
        "@id": "dtmi:com:syyclops:Collection:MS2;1"
      },
      "writable": true,
      "@id": "dtmi:com:syyclops:Collection:externalIds;1"
    },
    {
      "@type": "Property",
      "displayName": {
        "en": "Mapped IDs"
      },
      "name": "mappedIds",
      "writable": true,
      "schema": {
        "@type": "Array",
        "elementSchema": "dtmi:com:syyclops:CollectionMappedIdObject;1",
        "@id": "dtmi:com:syyclops:Collection:AS3;1"
      },
      "@id": "dtmi:com:syyclops:Collection:mappedIds;1"
    },
    {
      "@type": "Property",
      "displayName": {
        "en": "Name"
      },
      "name": "name",
      "schema": "string",
      "writable": true,
      "@id": "dtmi:com:syyclops:Collection:name;1"
    },
    {
      "@type": "Property",
      "name": "geometryViewerID",
      "displayName": {
        "en": "Geometry Viewer ID"
      },
      "writable": true,
      "schema": "string",
      "comment": "Reference for geometry rendering (i.e. ForgeViewerID)",
      "@id": "dtmi:com:syyclops:Collection:geometryViewerID;1"
    },
    {
      "@type": "Property",
      "name": "geometrySpatialReference",
      "displayName": {
        "en": "Geometry Spatial Reference"
      },
      "writable": true,
      "schema": "string",
      "comment": "Reference for displaying in spatial context",
      "@id": "dtmi:com:syyclops:Collection:geometrySpatialReference;1"
    },
    {
      "@type": "Property",
      "name": "geometryExternalID",
      "displayName": {
        "en": "Geometry External ID"
      },
      "writable": true,
      "schema": "string",
      "comment": "Reference to geometry source (i.e. Revit GUID)",
      "@id": "dtmi:com:syyclops:Collection:geometryExternalID;1"
    },
    {
      "@type": "Property",
      "name": "uniqueID",
      "displayName": {
        "en": "Globally Unique ID"
      },
      "writable": true,
      "schema": "string",
      "@id": "dtmi:com:syyclops:Collection:uniqueID;1"
    },
    {
      "@type": "Property",
      "name": "externalID",
      "displayName": {
        "en": "External ID"
      },
      "writable": true,
      "schema": "string",
      "@id": "dtmi:com:syyclops:Collection:externalID;1"
    },
    {
      "@type": "Property",
      "name": "code",
      "displayName": {
        "en": "Code"
      },
      "writable": true,
      "schema": "string",
      "@id": "dtmi:com:syyclops:Collection:code;1"
    },
    {
      "@type": "Property",
      "name": "description",
      "displayName": {
        "en": "Description"
      },
      "writable": true,
      "schema": "string",
      "@id": "dtmi:com:syyclops:Collection:description;1"
    },
    {
      "@type": "Property",
      "name": "siteID",
      "displayName": {
        "en": "Site ID"
      },
      "writable": true,
      "schema": "string",
      "@id": "dtmi:com:syyclops:Collection:siteID;1"
    },
    {
      "@type": "Property",
      "name": "landId",
      "displayName": {
        "en": "Land ID"
      },
      "writable": true,
      "schema": "string",
      "comment": "Reference of the land (i.e. campus, site, airport) to which the asset belongs. A Customer has one or many Lands. Land is considered the top-level entity for binding airport twins.",
      "@id": "dtmi:com:syyclops:Collection:landId;1"
    },
    {
      "@type": "Property",
      "name": "customProperties",
      "displayName": {
        "en": "Custom Properties"
      },
      "schema": {
        "@type": "Map",
        "mapKey": {
          "name": "sourceName",
          "schema": "string",
          "@id": "dtmi:com:syyclops:Collection:sourceName;1"
        },
        "mapValue": {
          "name": "sourceProperties",
          "schema": {
            "@type": "Map",
            "mapKey": {
              "name": "propertyName",
              "schema": "string",
              "@id": "dtmi:com:syyclops:Collection:propertyName;1"
            },
            "mapValue": {
              "name": "propertyValue",
              "schema": "string",
              "@id": "dtmi:com:syyclops:Collection:propertyValue;1"
            },
            "@id": "dtmi:com:syyclops:Collection:MS5;1"
          },
          "@id": "dtmi:com:syyclops:Collection:sourceProperties;1"
        },
        "@id": "dtmi:com:syyclops:Collection:MS4;1"
      },
      "@id": "dtmi:com:syyclops:Collection:customProperties;1"
    },
    {
      "@type": "Property",
      "name": "alternateClassification",
      "displayName": {
        "en": "Alternate Classification"
      },
      "writable": true,
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "masterFormat",
            "displayName": {
              "en": "MasterFormat"
            },
            "schema": "dtmi:com:syyclops:CollectionAlternateClassificationObject;1"
          },
          {
            "name": "omniClass",
            "displayName": {
              "en": "OmniClass"
            },
            "schema": "dtmi:com:syyclops:CollectionAlternateClassificationObject;1"
          },
          {
            "name": "uniFormat",
            "displayName": {
              "en": "UniFormat"
            },
            "schema": "dtmi:com:syyclops:CollectionAlternateClassificationObject;1"
          },
          {
            "name": "uniclass",
            "displayName": {
              "en": "Uniclass"
            },
            "schema": "dtmi:com:syyclops:CollectionAlternateClassificationObject;1"
          },
          {
            "name": "projectHaystack",
            "displayName": {
              "en": "Project Haystack"
            },
            "schema": "dtmi:com:syyclops:CollectionAlternateClassificationObject;1"
          },
          {
            "name": "brickSchema",
            "displayName": {
              "en": "Brick Schema"
            },
            "schema": "dtmi:com:syyclops:CollectionAlternateClassificationObject;1"
          }
        ],
        "@id": "dtmi:com:syyclops:Collection:OS6;1"
      },
      "@id": "dtmi:com:syyclops:Collection:alternateClassification;1"
    }
  ],
  "schemas": [
    {
      "@id": "dtmi:com:syyclops:CollectionAlternateClassificationObject;1",
      "@type": "Object",
      "fields": [
        {
          "name": "version",
          "displayName": {
            "en": "Version"
          },
          "schema": "string"
        },
        {
          "name": "code",
          "displayName": {
            "en": "Code"
          },
          "schema": "string"
        }
      ],
      "displayName": {
        "en": "Collection Alternate Classification Object"
      }
    },
    {
      "@id": "dtmi:com:syyclops:CollectionMappedIdObject;1",
      "@type": "Object",
      "description": {
        "en": "An object which represents an identity in Mapped, typically sourced from a connector. The composite of all fields is unique for a given twin."
      },
      "fields": [
        {
          "name": "exactType",
          "displayName": {
            "en": "Exact Type"
          },
          "description": {
            "en": "The type of Mapped identity such as ExternalIdentity, SpaceCode, or NameIdentity"
          },
          "schema": "string"
        },
        {
          "name": "scope",
          "displayName": {
            "en": "Scope"
          },
          "description": {
            "en": "The scope of a Mapped identity such as BUILDING, CONNECTOR, or ORG."
          },
          "schema": "string"
        },
        {
          "name": "scopeId",
          "displayName": {
            "en": "Scope ID"
          },
          "description": {
            "en": "The ID of the scope in Mapped. For a CONNECTOR, this is the ID of the source or destination connector."
          },
          "schema": "string"
        },
        {
          "name": "value",
          "displayName": {
            "en": "Value"
          },
          "description": {
            "en": "The value of the identity as defined in the scope (i.e. Connector) and stored in Mapped."
          },
          "schema": "string"
        },
        {
          "name": "dateCreated",
          "displayName": {
            "en": "Date Created"
          },
          "description": {
            "en": "The date the identity was created in Mapped."
          },
          "schema": "dateTime"
        }
      ],
      "displayName": {
        "en": "Collection Mapped Id Object"
      }
    }
  ],
  "@context": [
    "dtmi:dtdl:context;3"
  ]
}